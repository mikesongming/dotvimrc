" set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'Lokaltog/vim-powerline'
"Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdtree'
Plugin 'crusoexia/vim-monokai'
Plugin 'Yggdroot/indentLine'
Plugin 'godlygeek/csapprox'
Plugin 'jiangmiao/auto-pairs'
"Plugin 'tell-k/vim-autopep8'
Plugin 'scrooloose/nerdcommenter'
"Plugin 'tpop/vim-fugitive'
Plugin 'mattn/emmet-vim'
Plugin 'pangloss/vim-javascript'
Plugin 'marijnh/tern_for_vim'
Plugin 'metakirby5/codi.vim'

Plugin 'mrk21/yaml-vim'

Plugin 'ervandew/supertab'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

syntax on

set encoding=utf-8
set fileencoding=utf-8

set tabstop=4
set expandtab
set shiftwidth=4
set hlsearch
set number

let g:indentLine_char='|'
let g:indentLine_enabled = 1

"let g:autopep8_disable_show_diff=1

set foldmethod=indent
set foldlevel=99

set clipboard=unnamed

set t_Co=256

" ignore files in NERDTree
let NERDTreeIgnore=['\.pyc$', '\~$']

let javascript_enable_domhtmlcss = 1

" auto add pyhton header --start
autocmd BufNewFile *.py 0r ~/.vim/templates/python
autocmd BufNewFile *.py ks|call FileName()|'s
autocmd BufNewFile *.py ks|call CreatedTime()|'s

fun FileName()
    if line("$") > 10
        let l = 10  "这里是字母L 不是数字1
    else
        let l = line("$")
    endif
    exe "1," . l . "g/File Name:.*/s/File Name:.*/File Name: " .expand("%")
    "最前面是数字1，这里的File Name: 要和模板中一致
endfun

fun CreatedTime()
    if line("$") > 10
        let l = 10
    else
        let l = line("$")
    endif
    exe "1," . l . "g/Created Time:.*/s/Created Time:.*/Created Time: " .strftime("%Y-%m-%d %T")
    "这里Create Time: 要和模板中一致
endfun
" auto add python header --end

" auto add html header --start
"autocmd BufNewFile *.html 0r ~/.vim/templates/html

" html emmet
let g:user_emmet_install_global = 0
let g:user_emmet_leader_key='<Tab>'
"autocmd FileType html,css set shiftwidth=4
autocmd FileType html,css EmmetInstall

" auto add html header --end

" Codi, scratchpad for hackers
"autocmd FileType python Codi
"autocmd FileType javascript Codi

" YouCompleteMe
let g:ycm_min_num_of_chars_for_completion = 3 
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_complete_in_comments = 0
let g:ycm_complete_in_strings = 1
let g:ycm_key_list_select_completion = ['<c-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<c-p>', '<Up>']
let g:ycm_filetype_blacklist = {
    \ 'tagbar': 1,
    \ 'nerdtree': 1,
    \}
"" TAB completion in YCM 
"function! MyTabFunction ()
"    let line = getline('.')
"    let substr = strpart(line, -1, col('.')+1)
"    let substr = matchstr(substr, "[^ \t]*$")
"    if strlen(substr) == 0
"        return "\<tab>"
"    endif
"    return pumvisible() ? "\<c-n>" : "\<c-x>\<c-o>"
"endfunction
"inoremap <tab> <c-r>=MyTabFunction()<cr>

" UltiSnips
" Trigger configuration. Do not use <tab> if you use
" https://github.com/Valloric/YouCompleteMe.

" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

"better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

"let g:UltiSnipsExpandTrigger="<tab>"
"let g:UltiSnipsJumpForwardTrigger="<Right>"
"let g:UltiSnipsJumpBackwardTrigger="<Left>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

" Powerline setting
set laststatus=2
let g:Powerline_symbols='unicode'

colorscheme monokai

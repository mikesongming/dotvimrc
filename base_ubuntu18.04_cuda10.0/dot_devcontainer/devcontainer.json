// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.112.0/containers/ubuntu-18.04-git
{
    "name": "CUDA10.0 Ubuntu 18.04 & Git & VIM & Anaconda3 & CMake",
    "dockerFile": "Dockerfile",

    // Set *default* container specific settings.json values on container create.
    "settings": {
        //"terminal.integrated.shell.linux": "/bin/bash"
    },

    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "fabiospampinato.vscode-diff",
        "mutantdino.resourcemonitor",
        "ms-vscode.cmake-tools",
        "hars.cppsnippets",
        "ms-vscode.cpptools"
    ]

    // Remote-Container
    //"workspaceMount": "source=/data/songming/vsc-remote,target=/workspace,type=bind,consistency=cached",
    "workspaceFolder": "/workspace",
    "workspaceMount": "source=remote-workspace,target=/workspace,type=volume",

    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],

    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "cd $HOME",

    // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker.
    "mounts": [ 
        "source=/data/songming/vsc-remote/GPPDuCUDA,target=/home/songming/GPPDuCUDA,type=bind,consistency=cached",
        "source=vsc-remote-extensions,target=/home/songming/.vscode-server/extensions,type=volume",
        // And/or for VS Code Insiders
        "source=vsc-insiders-remote-extensions,target=/home/songming/.vscode-server-insiders/extensions,type=volume",
    ],

    // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
    // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

    // Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode"
}
